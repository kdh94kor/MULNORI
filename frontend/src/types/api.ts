/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/categories": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 모든 게시판 카테고리(계층구조) 조회
         * @description BoardCategoryMaster에 저장된 모든 카테고리를 계층 구조(트리) 형태로 조회합니다.
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 성공. 카테고리 트리 배열을 반환합니다. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 서버 오류. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/categories/children/{parentName}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 특정 상위 카테고리에 속한 하위 카테고리 목록 조회
         * @description 주어진 부모 카테고리 이름에 해당하는 모든 하위 카테고리를 조회합니다.
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 하위 카테고리를 조회할 부모 카테고리의 이름 */
                    parentName: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 성공. 하위 카테고리 객체 배열을 반환합니다. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 상위 카테고리를 찾을 수 없음. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 서버 오류. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Get_DivePoint_V1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 다이빙 포인트 정보 조회
         * @description 공공데이터 포털의 스킨스쿠버 지수 API를 이용해 다이빙 포인트 정보를 가져옵니다.
         */
        get: {
            parameters: {
                query?: {
                    /** @description 페이지 번호 */
                    pageNo?: string;
                    /** @description 한 페이지 결과 수 */
                    numOfRows?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 성공. 다이빙 포인트 정보 배열을 반환합니다. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DivePoint"][];
                    };
                };
                /** @description 서버 오류 또는 API 키가 없는 경우. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example 500 error */
                            error?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Set_DivePointMst_V1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * 새로운 다이빙 포인트 등록 요청
         * @description 등록 요청된 다이빙 포인트를 등록합니다.
         */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /**
                         * Format: string
                         * @description 포인트명
                         * @example 하조대전망대
                         */
                        pointName?: string;
                        /**
                         * Format: double
                         * @description 위도
                         * @example 37.5665
                         */
                        lat?: number;
                        /**
                         * Format: double
                         * @description 경도
                         * @example 126.978
                         */
                        lot?: number;
                        /**
                         * Format: string
                         * @description 포인트 태그
                         * @example {
                         *       "샤워장있음": null,
                         *       "수심5m": null
                         *     }
                         */
                        tags?: string;
                        /**
                         * @description 포인트 항목 상태
                         * @example PENDING
                         * @enum {string}
                         */
                        pointStatus?: "PENDING" | "APPROVED" | "REJECTED";
                    };
                };
            };
            responses: {
                /** @description 다이빙 포인트가 정상적으로 등록되었습니다. */
                201: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example DivePoint saved successfully */
                            message?: string;
                            divePoint?: components["schemas"]["DivePointMst"];
                        };
                    };
                };
                /** @description 필수 필드가 누락되었거나 데이터 형식이 올바르지 않습니다. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 서버 오류. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Get_DivePointMst_V1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 저장된 다이빙 포인트 마스터 정보 조회
         * @description 데이터베이스에 저장된 모든 다이빙 포인트 마스터 정보를 조회합니다.
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 성공. 다이빙 포인트 마스터 정보 배열을 반환합니다. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DivePointMst"][];
                    };
                };
                /** @description 서버 오류. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Get_DivePointMst_V2": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * 저장된 다이빙 포인트 조회 V2
         * @description 데이터베이스에 저장된 모든 다이빙 포인트 마스터 정보를 조회합니다. 승인여부 필터 적용됨
         */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description 성공. 다이빙 포인트 마스터 정보 배열을 반환합니다. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["DivePointMst"][];
                    };
                };
                /** @description 유효하지 않은 승인여부 */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 서버 오류. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/Delete_DivePointMstTag_V1/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        /**
         * 다이빙 포인트 태그 삭제
         * @description 특정 다이빙 포인트에서 지정된 태그를 삭제합니다.
         */
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    /** @description 다이빙 포인트의 ID */
                    id: number;
                };
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /**
                         * @description 삭제할 태그 이름
                         * @example 바다
                         */
                        tagToDelete?: string;
                    };
                };
            };
            responses: {
                /** @description 태그가 성공적으로 삭제되었습니다. */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @example Tag deleted successfully */
                            message?: string;
                            divePoint?: components["schemas"]["DivePointMst"];
                        };
                    };
                };
                /** @description 요청 본문에 tagToDelete가 누락되었거나 유효하지 않습니다. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 해당 ID의 다이빙 포인트를 찾을 수 없거나 삭제할 태그를 찾을 수 없습니다. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description 서버 오류. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        DivePointMst: {
            /** @description Dive Point Master ID */
            id: number;
            /**
             * Format: double
             * @description Latitude
             */
            lat: number;
            /**
             * Format: double
             * @description Longitude
             */
            lot: number;
            /** @description Point Name */
            pointName: string;
            /** @description Tags associated with the point */
            tags?: string;
            /**
             * @description Status of the point
             * @enum {string}
             */
            pointStatus: "PENDING" | "APPROVED" | "REJECTED";
        };
        /**
         * @example {
         *       "id": 1,
         *       "skscExpcnRgnNm": "제주 서귀포",
         *       "lat": 33.2461,
         *       "lot": 126.5615,
         *       "predcYmd": "20250917",
         *       "predcNoonSeCd": "오전",
         *       "tdlvHrCn": "1",
         *       "minWvhgt": "0.5",
         *       "maxWvhgt": "1.0",
         *       "totalIndex": "좋음",
         *       "lastScr": 85
         *     }
         */
        DivePoint: {
            /** @description 자동 생성된 고유 ID */
            id: number;
            /** @description 다이빙 포인트 지역명 */
            skscExpcnRgnNm: string;
            /**
             * Format: double
             * @description 위도
             */
            lat: number;
            /**
             * Format: double
             * @description 경도
             */
            lot: number;
            /** @description 예측일자 (YYYYMMDD) */
            predcYmd?: string;
            /** @description 예측 시간 구분 (오전/오후) */
            predcNoonSeCd?: string;
            /** @description 조석 시간 정보 */
            tdlvHrCn?: string;
            /** @description 최소 파고(m) */
            minWvhgt?: string;
            /** @description 최대 파고(m) */
            maxWvhgt?: string;
            /** @description 스쿠버 종합지수 (매우좋음, 좋음, 보통, 나쁨) */
            totalIndex?: string;
            /**
             * Format: double
             * @description 최종 점수
             */
            lastScr?: number;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
